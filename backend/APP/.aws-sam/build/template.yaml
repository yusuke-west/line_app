AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'UseCase-HairSalon-Backend

  '
Globals:
  Function:
    Timeout: 30
    MemorySize:
      Fn::FindInMap:
      - EnvironmentMap
      - Ref: Environment
      - LambdaMemorySize
Parameters:
  Environment:
    Type: String
    AllowedValues:
    - dev
    - prod
    Default: dev
  ChannelType:
    Type: String
    AllowedValues:
    - LIFF
    Default: LIFF
Mappings:
  EnvironmentMap:
    dev:
      LINEOAChannelId: 1660950073
      LIFFChannelId: 1660950080
      HairSalonShopMasterDBName: HairSalonShopMaster
      HairSalonReservationInfoDBName: HairSalonReservationInfo
      HairSalonStaffReservationDBName: HairSalonStaffReservation
      LINEChannelAccessTokenDBName: LINEChannelAccessToken
      MessageTable: LineRemindMessage
      RemindDateDifference: -1
      FrontS3BucketName: demo-app-front-module
      LayerVersion: 2
      LoggerLevel: DEBUG
      LambdaMemorySize: 128
      TTL: false
      TTLDay: 0
    prod:
      LINEOAChannelId: OAChannelId
      LIFFChannelId: LIFFChannelId
      HairSalonShopMasterDBName: HairSalonShopMasterDBName
      HairSalonReservationInfoDBName: HairSalonReservationInfoDBName
      HairSalonStaffReservationDBName: HairSalonStaffReservationDBName
      LINEChannelAccessTokenDBName: LINEChannelAccessTokenDBName
      MessageTable: MessageTableDBName
      RemindDateDifference: -1
      FrontS3BucketName: S3Bucket Name
      LayerVersion: Layer Version
      LoggerLevel: INFO or DEBUG
      LambdaMemorySize: 128 to 3008
      TTL: False or True
      TTLDay: Data Delete Day
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: logs:PutLogEvents
            Resource:
              Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/HairSalon-*:*:*
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:UpdateItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/HairSalon-*:*
            - Fn::GetAtt:
              - HairSalonShopMasterDB
              - Arn
            - Fn::GetAtt:
              - HairSalonReservationInfoDB
              - Arn
            - Fn::GetAtt:
              - HairSalonStaffReservationDB
              - Arn
            - Fn::Sub: ${HairSalonReservationInfoDB.Arn}/index/*
            - Fn::Sub: ${HairSalonStaffReservationDB.Arn}/index/*
            - Fn::Join:
              - ''
              - - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/
                - Fn::FindInMap:
                  - EnvironmentMap
                  - Ref: Environment
                  - LINEChannelAccessTokenDBName
            - Fn::Join:
              - ''
              - - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/
                - Fn::FindInMap:
                  - EnvironmentMap
                  - Ref: Environment
                  - MessageTable
            - Fn::Join:
              - ''
              - - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/
                - Fn::FindInMap:
                  - EnvironmentMap
                  - Ref: Environment
                  - MessageTable
                - /index/*
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            Resource: '*'
      RoleName:
        Fn::Sub: ${AWS::StackName}-LambdaRole
  ShopListGet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: shop_list_get.lambda_handler
      Runtime: python3.8
      CodeUri: ShopListGet
      FunctionName:
        Fn::Sub: HairSalon-ShopListGet-${Environment}
      Description: ''
      Timeout: 3
      Layers:
      - Fn::Join:
        - ':'
        - - Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer
          - Fn::ImportValue: HairSalonLayerDev
          - Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LayerVersion
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Environment:
        Variables:
          LOGGER_LEVEL:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LoggerLevel
          SHOP_MASTER_DB:
            Ref: HairSalonShopMasterDB
      Tags:
        Name: LINE
        App: HairSalon
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /shop_list_get
            Method: get
            RestApiId:
              Ref: HairSalonApiGateway
    Metadata:
      SamResourceId: ShopListGet
  StaffListGet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: staff_list_get.lambda_handler
      Runtime: python3.8
      CodeUri: StaffListGet
      FunctionName:
        Fn::Sub: HairSalon-StaffListGet-${Environment}
      Description: ''
      Timeout: 3
      Layers:
      - Fn::Join:
        - ':'
        - - Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer
          - Fn::ImportValue: HairSalonLayerDev
          - Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LayerVersion
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Environment:
        Variables:
          LOGGER_LEVEL:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LoggerLevel
          SHOP_MASTER_DB:
            Ref: HairSalonShopMasterDB
      Tags:
        Name: LINE
        App: HairSalon
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /staff_list_get
            Method: get
            RestApiId:
              Ref: HairSalonApiGateway
    Metadata:
      SamResourceId: StaffListGet
  CourseListGet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: course_list_get.lambda_handler
      Runtime: python3.8
      CodeUri: CourseListGet
      FunctionName:
        Fn::Sub: HairSalon-CourseListGet-${Environment}
      Description: ''
      Timeout: 3
      Layers:
      - Fn::Join:
        - ':'
        - - Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer
          - Fn::ImportValue: HairSalonLayerDev
          - Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LayerVersion
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Environment:
        Variables:
          LOGGER_LEVEL:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LoggerLevel
          SHOP_MASTER_DB:
            Ref: HairSalonShopMasterDB
      Events:
        CategoryGet:
          Type: Api
          Properties:
            Path: /course_list_get
            Method: get
            RestApiId:
              Ref: HairSalonApiGateway
    Metadata:
      SamResourceId: CourseListGet
  StaffCalendarGet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: staff_calendar_get.lambda_handler
      Runtime: python3.8
      CodeUri: StaffCalendarGet
      FunctionName:
        Fn::Sub: HairSalon-StaffCalendarGet-${Environment}
      Description: ''
      Timeout: 3
      Layers:
      - Fn::Join:
        - ':'
        - - Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer
          - Fn::ImportValue: HairSalonLayerDev
          - Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LayerVersion
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Environment:
        Variables:
          LOGGER_LEVEL:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LoggerLevel
          SHOP_MASTER_DB:
            Ref: HairSalonShopMasterDB
          STAFF_RESERVATION_INFO_DB:
            Ref: HairSalonStaffReservationDB
      Tags:
        Name: LINE
        App: HairSalon
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /staff_calendar_get
            Method: get
            RestApiId:
              Ref: HairSalonApiGateway
    Metadata:
      SamResourceId: StaffCalendarGet
  ReservedTimeGet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: reserved_time_get.lambda_handler
      Runtime: python3.8
      CodeUri: ReservedTimeGet
      FunctionName:
        Fn::Sub: HairSalon-ReservedTimeGet-${Environment}
      Description: ''
      Timeout: 3
      Layers:
      - Fn::Join:
        - ':'
        - - Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer
          - Fn::ImportValue: HairSalonLayerDev
          - Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LayerVersion
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Environment:
        Variables:
          LOGGER_LEVEL:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LoggerLevel
          SHOP_MASTER_DB:
            Ref: HairSalonShopMasterDB
          STAFF_RESERVATION_INFO_DB:
            Ref: HairSalonStaffReservationDB
      Tags:
        Name: LINE
        App: HairSalon
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /reserved_time_get
            Method: get
            RestApiId:
              Ref: HairSalonApiGateway
    Metadata:
      SamResourceId: ReservedTimeGet
  ReservationPut:
    Type: AWS::Serverless::Function
    Properties:
      Handler: reservation_put.lambda_handler
      Runtime: python3.8
      CodeUri: ReservationPut
      FunctionName:
        Fn::Sub: HairSalon-ReservationPut-${Environment}
      Description: ''
      Timeout: 3
      Layers:
      - Fn::Join:
        - ':'
        - - Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer
          - Fn::ImportValue: HairSalonLayerDev
          - Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LayerVersion
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Environment:
        Variables:
          TTL_DAY:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - TTLDay
          OA_CHANNEL_ID:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LINEOAChannelId
          LIFF_CHANNEL_ID:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LIFFChannelId
          REMIND_DATE_DIFFERENCE:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - RemindDateDifference
          LOGGER_LEVEL:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LoggerLevel
          CHANNEL_TYPE:
            Ref: ChannelType
          SHOP_MASTER_DB:
            Ref: HairSalonShopMasterDB
          RESERVATION_INFO_DB:
            Ref: HairSalonReservationInfoDB
          STAFF_RESERVATION_INFO_DB:
            Ref: HairSalonStaffReservationDB
          CHANNEL_ACCESS_TOKEN_DB:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - LINEChannelAccessTokenDBName
          MESSAGE_DB:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - MessageTable
      Tags:
        Name: LINE
        App: HairSalon
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /reservation_put
            Method: post
            RestApiId:
              Ref: HairSalonApiGateway
    Metadata:
      SamResourceId: ReservationPut
  HairSalonShopMasterDB:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: shopId
        AttributeType: N
      TableName:
        Fn::FindInMap:
        - EnvironmentMap
        - Ref: Environment
        - HairSalonShopMasterDBName
      KeySchema:
      - AttributeName: shopId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  HairSalonReservationInfoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: reservationId
        AttributeType: S
      TableName:
        Fn::FindInMap:
        - EnvironmentMap
        - Ref: Environment
        - HairSalonReservationInfoDBName
      KeySchema:
      - AttributeName: reservationId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TimeToLiveSpecification:
        AttributeName: expirationDate
        Enabled:
          Fn::FindInMap:
          - EnvironmentMap
          - Ref: Environment
          - TTL
  HairSalonStaffReservationDB:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: staffId
        AttributeType: N
      - AttributeName: reservedDay
        AttributeType: S
      - AttributeName: reservedYearMonth
        AttributeType: S
      TableName:
        Fn::FindInMap:
        - EnvironmentMap
        - Ref: Environment
        - HairSalonStaffReservationDBName
      KeySchema:
      - AttributeName: staffId
        KeyType: HASH
      - AttributeName: reservedDay
        KeyType: RANGE
      GlobalSecondaryIndexes:
      - IndexName: staffId-reservedYearMonth-index
        KeySchema:
        - AttributeName: staffId
          KeyType: HASH
        - AttributeName: reservedYearMonth
          KeyType: RANGE
        Projection:
          ProjectionType: INCLUDE
          NonKeyAttributes:
          - reservableTimeTerm
          - reservedDay
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TimeToLiveSpecification:
        AttributeName: expirationDate
        Enabled:
          Fn::FindInMap:
          - EnvironmentMap
          - Ref: Environment
          - TTL
  HairSalonApiGateway:
    Properties:
      StageName:
        Ref: Environment
      OpenApiVersion: 3.0.2
      Cors:
        AllowOrigin: '''*'''
        AllowHeaders: '''Origin, Authorization, Accept, X-Requested-With, Content-Type,
          x-amz-date, X-Amz-Security-Token'''
        AllowMethods: '''GET, POST, OPTIONS'''
    Type: AWS::Serverless::Api
    Tags:
    - Key: Name
      Value: LINE
    - Key: App
      Value: HairSalon
  FrontBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::FindInMap:
        - EnvironmentMap
        - Ref: Environment
        - FrontS3BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
  AssetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: FrontBucket
      PolicyDocument:
        Version: '2008-10-17'
        Id: PolicyForCloudFrontPrivateContent
        Statement:
        - Action: s3:GetObject
          Sid: 1
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:s3:::${FrontBucket}/*
          Principal:
            AWS:
              Fn::Sub: arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity
                ${CloudFrontOriginAccessIdentity}
          Condition:
            Bool:
              aws:SecureTransport: 'true'
        - Action: s3:*
          Sid: 2
          Effect: Deny
          Principal: '*'
          Resource:
            Fn::Sub: arn:aws:s3:::${FrontBucket}
          Condition:
            Bool:
              aws:SecureTransport: 'false'
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - ConnectionAttempts: 3
          ConnectionTimeout: 10
          DomainName:
            Fn::GetAtt:
            - FrontBucket
            - DomainName
          Id:
            Fn::Sub: S3-${FrontBucket}
          OriginPath: ''
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Sub: origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        OriginGroups:
          Quantity: 0
        DefaultCacheBehavior:
          AllowedMethods:
          - HEAD
          - DELETE
          - POST
          - GET
          - OPTIONS
          - PUT
          - PATCH
          CachedMethods:
          - HEAD
          - GET
          Compress: false
          DefaultTTL: 0
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          MaxTTL: 0
          MinTTL: 0
          SmoothStreaming: false
          TargetOriginId:
            Fn::Sub: S3-${FrontBucket}
          ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses:
        - ErrorCode: 403
          ResponsePagePath: /index.html
          ResponseCode: '200'
          ErrorCachingMinTTL: 0
        Comment: ''
        PriceClass: PriceClass_All
        Enabled: true
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
          MinimumProtocolVersion: TLSv1
        Restrictions:
          GeoRestriction:
            RestrictionType: none
        HttpVersion: http2
        DefaultRootObject: index.html
        IPV6Enabled: true
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          Ref: AWS::StackName
Outputs:
  ShopListGetApi:
    Description: API Gateway endpoint URL for Development stage for ShopListGet function
    Value:
      Fn::Sub: https://${HairSalonApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/shop_list_get/
  ShopListGetFunction:
    Description: ShopListGet Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ShopListGet
      - Arn
  StaffListGetApi:
    Description: API Gateway endpoint URL for Development stage for StaffListGet function
    Value:
      Fn::Sub: https://${HairSalonApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/staff_list_get/
  StaffListGetFunction:
    Description: StaffListGet Lambda Function ARN
    Value:
      Fn::GetAtt:
      - StaffListGet
      - Arn
  StaffCalendarGetApi:
    Description: API Gateway endpoint URL for Development stage for StaffCalendarGet
      function
    Value:
      Fn::Sub: https://${HairSalonApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/staff_calendar_get/
  StaffCalendarGetFunction:
    Description: StaffCalendarGet Lambda Function ARN
    Value:
      Fn::GetAtt:
      - StaffCalendarGet
      - Arn
  CourseListGetApi:
    Description: API Gateway endpoint URL for Development stage for CourseListGet
    Value:
      Fn::Sub: https://${HairSalonApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/course_list_get/
  CourseListGetFunction:
    Description: CourseListGet Lambda Function ARN
    Value:
      Fn::GetAtt:
      - CourseListGet
      - Arn
  ReservedTimeGetFunction:
    Description: API Gateway endpoint URL for Development stage for ReservedTimeGet
      function
    Value:
      Fn::Sub: https://${HairSalonApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/reserved_time_get/
  ReservationPutApi:
    Description: API Gateway endpoint URL for Development stage for ReservationPut
      function
    Value:
      Fn::Sub: https://${HairSalonApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/reservation_put/
  ReservationPutFunction:
    Description: ReservationPut Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ReservationPut
      - Arn
  LambdaLayer:
    Description: Used Layer at Function
    Value:
      Fn::Join:
      - ':'
      - - Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer
        - Fn::ImportValue: HairSalonLayerDev
        - Fn::FindInMap:
          - EnvironmentMap
          - Ref: Environment
          - LayerVersion
  LINEOAChannelId:
    Description: LINE Mini ChannelId
    Value:
      Fn::FindInMap:
      - EnvironmentMap
      - Ref: Environment
      - LINEOAChannelId
  LINEChannelType:
    Description: LINE ChannelType
    Value:
      Ref: ChannelType
  CloudFrontDomainName:
    Description: CloudFront for HairSalon Demo
    Value:
      Fn::GetAtt:
      - CloudFrontDistribution
      - DomainName
  S3:
    Description: S3 Bucket for Frontend
    Value:
      Ref: FrontBucket
